apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "postgresql.fullname" . }}
  labels:
    app: {{ include "postgresql.name" . }}
data:
  patroni.yml: |
    scope: postgresql
    ttl: {{ .Values.patroni.ttl }}
    loop_wait: {{ .Values.patroni.loop_wait }}
    retry_timeout: {{ .Values.patroni.retry_timeout }}
    maximum_lag_on_failover: {{ .Values.patroni.maxLagOnFailover }}
    synchronous_mode: {{ .Values.patroni.synchronous_mode }}
    restapi:
      listen: 0.0.0.0:{{ .Values.patroniPort }}

    bootstrap:
      dcs:
        postgresql:
          use_pg_rewind: true
          pg_hba:
            - local all {{ .Values.admin.username }} trust
            - host all all 0.0.0.0/0 md5
            - host replication {{ .Values.replication.username }} 0.0.0.0/0 md5

      initdb:
        - locale-provider: icu
        - auth-host: md5
        - icu-locale: fa-IR
        - auth-local: trust
        - encoding: UTF8
        

    postgresql:
      listen: 0.0.0.0:{{ .Values.postgresqlPort }}
      data_dir: {{ .Values.postgresql.data_mountpath }}
      authentication:
        rewind:
          username: {{ .Values.rewind.username }}
          password: {{ .Values.rewind.password }}
        superuser:
          username: {{ .Values.admin.username }}
          password: {{ .Values.admin.password }}
        replication:
          username: {{ .Values.replication.username }}
          password: {{ .Values.replication.password }}

      parameters:
        wal_level: replica
        hot_standby: "on"
        max_connections: 200
        max_wal_senders: 4
        max_replication_slots: 4
        wal_keep_size: 80MB

    kubernetes:
      bypass_api_service: true
      use_endpoints: true
      labels:
        app: {{ include "postgresql.fullname" . }}
