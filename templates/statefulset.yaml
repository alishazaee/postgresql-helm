apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "my-postgresql.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "my-postgresql.name" . }}
    helm.sh/chart: postgresql
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  serviceName: {{ include "my-postgresql.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "my-postgresql.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "my-postgresql.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.username }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-postgresql.fullname" . }}
                  key: postgresql-password
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.database }}
          ports:
            - containerPort: {{ .Values.service.port }}
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
              subPath: pgdata
  volumeClaimTemplates:
    - metadata:
        name: postgresql-data
        labels:
          app.kubernetes.io/name: {{ include "my-postgresql.name" . }}
          app.kubernetes.io/instance: {{ .Release.Name }}
      spec:
        accessModes:  {{ .Values.persistence.accessModes  }} 
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
